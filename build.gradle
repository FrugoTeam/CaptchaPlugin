plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "1.0.6"
}

group = 'pl.qlnus'
version = '1.0-SNAPSHOT'
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
repositories {
    mavenCentral()
    maven { url("https://repo.papermc.io/repository/maven-public/") }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://storehouse.okaeri.eu/repository/maven-public/" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")
    implementation 'com.github.zitreF:CocosGui:1.1'
    implementation 'eu.okaeri:okaeri-configs-yaml-bukkit:5.0.0-beta.5'
    implementation 'eu.okaeri:okaeri-configs-serdes-bukkit:5.0.0-beta.5'
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.18.2")
    }
}